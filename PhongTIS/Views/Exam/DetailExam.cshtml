@model PhongTIS.Models.Question
@{
    Layout = null;


}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.4/dist/jquery.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    @Styles.Render("~/Content/css/exam_exercise.css")
    <title>Document</title>
</head>
<body>
    <div class="container">
        <div class="row">
            @Html.Action("getExam", "Exam", new { id = Model.Exercise.id })
            <div class="col-md-8 mt-5">
                @if (Model.Exercise.audio != null)
                {
                    <div class="my-3">
                        <audio id="audio-question">
                            <source src="~/Audio/@Model.Exercise.audio" type="audio/mpeg">
                        </audio>
                        <i style="font-size: 48px; cursor: pointer; color: grey" id="buttonStartAudio" class="fa buttonStart">&#xf144;</i>

                    </div>
                }
                @Html.Action("getQuestion", "Exam", new { id = Model.Exercise.id })
            </div>

            </div>
        </div>
    <script src="./exam.js"></script>
    <script>

        let ques_one = document.getElementById("question-num-1");
        let ques_six = document.getElementById("question-num-6");
        let question = document.getElementsByClassName("question");
        var countDiv = document.getElementById("timer"), secpass,
        countDown = setInterval(function () {
            secpass();
        }, 1000);
        if (sessionStorage.getItem("timer") != null) {
            var sec = sessionStorage.getItem("timer");
        }
        else {
             var sec = @Model.Exercise.timer;
        }

        function secpass()
        {
            var min = Math.floor(sec / 60),
                remSec = sec % 60;

            if (remSec < 10) {

                remSec = '0' + remSec;

            }
            if (min < 10) {

                min = '0' + min;

            }
            countDiv.innerHTML = min + ":" + remSec;

            if (sec > 0) {

                sec = sec - 1;
                sessionStorage.setItem("timer", sec);

            } else {

                clearInterval(countDown);
                countDiv.innerHTML = 'TIME UP!';
                countDiv.style.color = 'red';

            }
        }

        function getSelectedRadio()
        {
            
           
            for(i = 1; i<= @Session["totalRecord"]; i++)
            {
                var selected = document.querySelector('input[name="test_'+String(i)+'"]:checked');
                if (selected)
                {
                    var num = document.getElementById("num" + String(i));

                    num.style.background = "red";
                    var answer = document.getElementsByName('test_' + String(i));
                    for (j = 0; j < answer.length; j++) {
                        if (answer[j].checked) {
                            localStorage.setItem('test_' + String(i), answer[j].value);
                            localStorage.setItem('answer_' + String(i), answer[j].value);
                            document.getElementById('answer_' + String(i)).value = localStorage.getItem('answer_' + String(i));
                        }
                    }

                }

            }

            //alert(JSON.stringify(localStorage));

        }
        function saveAnswer()
        {
            for (i = 1; i <= @Session["totalRecord"]; i++)
            {
                var answer = document.getElementsByName('test_' + String(i));

                if (localStorage.getItem('test_' + String(i)) != null) {

                    var num = document.getElementById("num" + String(i));
                    num.style.background = "red";
                    document.getElementById('answer_' + String(i)).value = localStorage.getItem('answer_' + String(i));
                }
                for (j = 0; j < answer.length; j++)
                {
                    if (localStorage.getItem('test_' + String(i)) == answer[j].value) {
                        answer[j].checked = true;

                    }
                }
            }
        }
        saveAnswer();
        function scrollToQuesFirst(e)
        {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        };
        function scrollToQuesNextFive(e)
        {
            e.stopPropagation();
            ques_six.scrollIntoView();
        };
        var button = document.getElementById("buttonStartAudio");
        var audio = document.getElementById("audio-question");
        button.addEventListener("click", function(){
            if (audio.paused) {
                audio.play();
                button.style.display = "none"
            }
        });
        //const exam = document.getElementById("exams")
        //exam.addEventListener('click', (event) => {
        //    const isButton = event.target.nodeName === 'BUTTON';
        //    if (!isButton && !isAudio) {
        //        return;
        //    }
        //    var id = event.target.id;
        //    var idAudio = id.replace("buttonStartAudio_", "audio-question-");
        //    var button = document.getElementById(event.target.id);
        //    var audio = document.getElementById(idAudio);
        //    if (audio.paused) {
        //        audio.play();
        //    }
        //    audio.onended = function () {
        //        button.disabled = "true";
        //    }
        //})
    </script>
    <script type="text/javascript">
        function preback() {
            window.history.forward();
        }
        setTimeout("preback()", 0);
        window.onunload = function () { null };
    </script>
</body>
</html>
